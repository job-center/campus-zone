<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.jobcenter.campus.mapper.StudentMapper" >
  <resultMap id="BaseResultMap" type="com.jobcenter.campus.entity.account.Student" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="student_no" property="studentNo" jdbcType="VARCHAR" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="group_id" property="groupId" jdbcType="INTEGER" />
    <result column="phone_no" property="phoneNo" jdbcType="VARCHAR" />
    <result column="birthday" property="birthday" jdbcType="TIMESTAMP" />
    <result column="sex" property="sex" jdbcType="TINYINT" />
    <result column="wechat_id" property="wechatId" jdbcType="VARCHAR" />
    <result column="father_id" property="fatherId" jdbcType="INTEGER" />
    <result column="mother_id" property="motherId" jdbcType="INTEGER" />
    <result column="status" property="status" jdbcType="TINYINT" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, student_no, name, group_id, phone_no, birthday, sex, wechat_id, father_id, mother_id, 
    status
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.jobcenter.campus.entity.account.StudentExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from student
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from student
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from student
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.jobcenter.campus.entity.account.StudentExample" >
    delete from student
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.jobcenter.campus.entity.account.Student" >
    <selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into student (student_no, name, group_id, 
      phone_no, birthday, sex, 
      wechat_id, father_id, mother_id, 
      status)
    values (#{studentNo,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, #{groupId,jdbcType=INTEGER}, 
      #{phoneNo,jdbcType=VARCHAR}, #{birthday,jdbcType=TIMESTAMP}, #{sex,jdbcType=TINYINT}, 
      #{wechatId,jdbcType=VARCHAR}, #{fatherId,jdbcType=INTEGER}, #{motherId,jdbcType=INTEGER}, 
      #{status,jdbcType=TINYINT})
  </insert>
  <insert id="insertSelective" parameterType="com.jobcenter.campus.entity.account.Student" >
    <selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into student
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="studentNo != null" >
        student_no,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="groupId != null" >
        group_id,
      </if>
      <if test="phoneNo != null" >
        phone_no,
      </if>
      <if test="birthday != null" >
        birthday,
      </if>
      <if test="sex != null" >
        sex,
      </if>
      <if test="wechatId != null" >
        wechat_id,
      </if>
      <if test="fatherId != null" >
        father_id,
      </if>
      <if test="motherId != null" >
        mother_id,
      </if>
      <if test="status != null" >
        status,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="studentNo != null" >
        #{studentNo,jdbcType=VARCHAR},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="groupId != null" >
        #{groupId,jdbcType=INTEGER},
      </if>
      <if test="phoneNo != null" >
        #{phoneNo,jdbcType=VARCHAR},
      </if>
      <if test="birthday != null" >
        #{birthday,jdbcType=TIMESTAMP},
      </if>
      <if test="sex != null" >
        #{sex,jdbcType=TINYINT},
      </if>
      <if test="wechatId != null" >
        #{wechatId,jdbcType=VARCHAR},
      </if>
      <if test="fatherId != null" >
        #{fatherId,jdbcType=INTEGER},
      </if>
      <if test="motherId != null" >
        #{motherId,jdbcType=INTEGER},
      </if>
      <if test="status != null" >
        #{status,jdbcType=TINYINT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.jobcenter.campus.entity.account.StudentExample" resultType="java.lang.Integer" >
    select count(*) from student
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update student
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.studentNo != null" >
        student_no = #{record.studentNo,jdbcType=VARCHAR},
      </if>
      <if test="record.name != null" >
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.groupId != null" >
        group_id = #{record.groupId,jdbcType=INTEGER},
      </if>
      <if test="record.phoneNo != null" >
        phone_no = #{record.phoneNo,jdbcType=VARCHAR},
      </if>
      <if test="record.birthday != null" >
        birthday = #{record.birthday,jdbcType=TIMESTAMP},
      </if>
      <if test="record.sex != null" >
        sex = #{record.sex,jdbcType=TINYINT},
      </if>
      <if test="record.wechatId != null" >
        wechat_id = #{record.wechatId,jdbcType=VARCHAR},
      </if>
      <if test="record.fatherId != null" >
        father_id = #{record.fatherId,jdbcType=INTEGER},
      </if>
      <if test="record.motherId != null" >
        mother_id = #{record.motherId,jdbcType=INTEGER},
      </if>
      <if test="record.status != null" >
        status = #{record.status,jdbcType=TINYINT},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update student
    set id = #{record.id,jdbcType=INTEGER},
      student_no = #{record.studentNo,jdbcType=VARCHAR},
      name = #{record.name,jdbcType=VARCHAR},
      group_id = #{record.groupId,jdbcType=INTEGER},
      phone_no = #{record.phoneNo,jdbcType=VARCHAR},
      birthday = #{record.birthday,jdbcType=TIMESTAMP},
      sex = #{record.sex,jdbcType=TINYINT},
      wechat_id = #{record.wechatId,jdbcType=VARCHAR},
      father_id = #{record.fatherId,jdbcType=INTEGER},
      mother_id = #{record.motherId,jdbcType=INTEGER},
      status = #{record.status,jdbcType=TINYINT}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.jobcenter.campus.entity.account.Student" >
    update student
    <set >
      <if test="studentNo != null" >
        student_no = #{studentNo,jdbcType=VARCHAR},
      </if>
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="groupId != null" >
        group_id = #{groupId,jdbcType=INTEGER},
      </if>
      <if test="phoneNo != null" >
        phone_no = #{phoneNo,jdbcType=VARCHAR},
      </if>
      <if test="birthday != null" >
        birthday = #{birthday,jdbcType=TIMESTAMP},
      </if>
      <if test="sex != null" >
        sex = #{sex,jdbcType=TINYINT},
      </if>
      <if test="wechatId != null" >
        wechat_id = #{wechatId,jdbcType=VARCHAR},
      </if>
      <if test="fatherId != null" >
        father_id = #{fatherId,jdbcType=INTEGER},
      </if>
      <if test="motherId != null" >
        mother_id = #{motherId,jdbcType=INTEGER},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=TINYINT},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.jobcenter.campus.entity.account.Student" >
    update student
    set student_no = #{studentNo,jdbcType=VARCHAR},
      name = #{name,jdbcType=VARCHAR},
      group_id = #{groupId,jdbcType=INTEGER},
      phone_no = #{phoneNo,jdbcType=VARCHAR},
      birthday = #{birthday,jdbcType=TIMESTAMP},
      sex = #{sex,jdbcType=TINYINT},
      wechat_id = #{wechatId,jdbcType=VARCHAR},
      father_id = #{fatherId,jdbcType=INTEGER},
      mother_id = #{motherId,jdbcType=INTEGER},
      status = #{status,jdbcType=TINYINT}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>