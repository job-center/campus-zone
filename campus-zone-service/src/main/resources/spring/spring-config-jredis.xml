<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:p="http://www.springframework.org/schema/p"
       xsi:schemaLocation="
        http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd">

    <!--&lt;!&ndash; cache redis util definition &ndash;&gt;-->
    <!--<bean id="redisUtils" class="com.sogou.upd.passport.common.utils.RedisUtils">-->
        <!--<property name="redisTemplate" ref="cacheTemplate"/>-->
    <!--</bean>-->
    <!--<bean id="cacheTemplate" class="org.springframework.data.redis.core.StringRedisTemplate"-->
          <!--p:connectionFactory-ref="cacheConnectionFactory"/>-->
    <!--<bean id="cacheConnectionFactory" class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory"-->
          <!--p:usePool="true">-->
        <!--&lt;!&ndash;<property name="hostName" value="${passport.redis.url}"/>&ndash;&gt;-->
        <!--&lt;!&ndash;<property name="port" value="${passport.redis.port}"/>&ndash;&gt;-->
        <!--<constructor-arg index="0" ref="cachePoolConfig"/>-->
    <!--</bean>-->
    <!--<bean id="cachePoolConfig" class="redis.clients.jedis.JedisPoolConfig">-->
        <!--<property name="maxTotal" value="1600"/>-->
        <!--<property name="maxIdle" value="300"/>-->
        <!--<property name="minIdle" value="300"/>-->
        <!--<property name="maxWaitMillis" value="1000"/>-->
        <!--<property name="testOnBorrow" value="false"/>-->
        <!--&lt;!&ndash;30分钟跑一次idle object eviction线程&ndash;&gt;-->
        <!--<property name="timeBetweenEvictionRunsMillis" value="180000" />-->
        <!--&lt;!&ndash; 解决java.net.SocketTimeoutException: connect timed out&ndash;&gt;-->
        <!--<property name="lifo" value="false" />-->
    <!--</bean>-->

    <!--&lt;!&ndash; token redis utils&ndash;&gt;-->
    <!--<bean id="tokenRedisUtils" class="com.sogou.upd.passport.common.utils.TokenRedisUtils">-->
        <!--<property name="redisTemplate" ref="tokenTemplate"/>-->
    <!--</bean>-->
    <!--<bean id="tokenTemplate" class="org.springframework.data.redis.core.StringRedisTemplate"-->
          <!--p:connectionFactory-ref="tokenConnectionFactory"/>-->
    <!--<bean id="tokenConnectionFactory" class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory"-->
          <!--p:usePool="true">-->
        <!--&lt;!&ndash;<property name="hostName" value="${passport.tokenRedis.url}"/>&ndash;&gt;-->
        <!--&lt;!&ndash;<property name="port" value="${passport.tokenRedis.port}"/>&ndash;&gt;-->
        <!--<constructor-arg index="0" ref="tokenPoolConfig"/>-->
    <!--</bean>-->
    <!--<bean id="tokenPoolConfig" class="redis.clients.jedis.JedisPoolConfig">-->
        <!--<property name="maxTotal" value="1600"/>-->
        <!--<property name="maxIdle" value="400"/>-->
        <!--<property name="minIdle" value="400"/>-->
        <!--<property name="maxWaitMillis" value="1000"/>-->
        <!--<property name="testOnBorrow" value="false"/>-->
        <!--&lt;!&ndash;30分钟跑一次idle object eviction线程&ndash;&gt;-->
        <!--<property name="timeBetweenEvictionRunsMillis" value="180000" />-->
        <!--&lt;!&ndash; 解决java.net.SocketTimeoutException: connect timed out&ndash;&gt;-->
        <!--<property name="lifo" value="false" />-->
    <!--</bean>-->

    <!--&lt;!&ndash;热切换redis&ndash;&gt;-->
    <!--<bean id="monitor" class="com.sogou.upd.passport.zk.Monitor" destroy-method="destory">-->
        <!--<constructor-arg name="zks" value="${zks}"/>-->
    <!--</bean>-->
    <!--<bean id="redisMonitor" class="com.sogou.upd.passport.zk.RedisMonitor" destroy-method="destroy">-->
        <!--<constructor-arg name="monitor" ref="monitor"/>-->
        <!--<constructor-arg name="cachePath" value="${cacheRedisZkPath}"/>-->
        <!--<constructor-arg name="tokenPath" value="${tokenRedisZkPath}"/>-->
        <!--<constructor-arg name="tokenConnectionFactory" ref="tokenConnectionFactory"/>-->
        <!--<constructor-arg name="cacheConnectionFactory" ref="cacheConnectionFactory"/>-->
    <!--</bean>-->

</beans>
